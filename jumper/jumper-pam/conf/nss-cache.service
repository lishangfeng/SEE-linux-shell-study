#!/usr/bin/env bash
# chkconfig: - 30 74
# description:  This is a daemon which handles app

if [ -f /etc/init.d/functions ]; then
    . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
    . /etc/rc.d/init.d/functions
else
    exit 0
fi

# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.

[ ${NETWORKING} = "no" ] && exit 0

# service name
service_name="nss-cache"

# pid文件位置
pid_file="/var/run/nss-cache.pid"

# 工作目录
work_dir="/var/lib/nss-cache/"

# 执行的命令
exec="python nss-cache.py daemon"

[ -f $config ] || exit 1
RETVAL=0

# 终端颜色
Red='\033[0;31m'
Color_Off='\033[0m'
Green='\033[0;32m'


status() {
    num=`ps aux|grep "${exec}"|grep -v "grep"|wc -l`
    if [ $num -ne 0 ];then
        # startup time
        last_pid=`ps aux|grep "${exec}"|grep -v "grep"|awk '{print $2}'|tail -n 1`
        pro_list=`ps aux|grep "${exec}"|grep -v "grep"|awk '{print $2}'|sed ':a;N;$!ba;s#\n#,#g'`
        start_time=`ps -p ${last_pid} -o lstart|grep -v 'STARTED'`
        t_count=`ps xH|grep ${last_pid}|grep -v grep|wc -l`
        p_count=`ps aux|grep "${exec}"|grep -v "grep"|awk '{print $2}'|wc -l`
        printf "${Green}         status: running${Color_Off}\n"
        printf "${Green}  process count: ${p_count}${Color_Off}\n"
        printf "${Green}threads/process: ${t_count}${Color_Off}\n"
        printf "${Green}   process list: ${pro_list}${Color_Off}\n"
        printf "${Green}         uptime: ${start_time}${Color_Off}\n"
        RETVAL=0
    else
        printf "${Green}         status: stopped${Color_Off}\n"
        RETVAL=1
    fi
    return $RETVAL
}

start() {
    # pid文件存在
    if [ -f "$pid_file" ];then
        pid=`cat "$pid_file" 2>/dev/null`
        if [ -n "$pid" ];then
            check_pid=`ps axu|grep $pid|wc -l`
            if [ $check_pid -eq 2 ];then
                printf "${Red}${service_name} is running with pid $pid ${Color_Off}\n"
                return 0
            else
                rm -f $pid_file
                cd $work_dir && $exec
                RETVAL=$?
                if [ $RETVAL -ne 0 ]; then
                    printf "${Red}start ${service_name} occurred errors ${Color_Off}\n"
                else
                    printf "${Green}start ${service_name} successfully ${Color_Off}\n"
                    sleep 1
                    status
                fi
                return 1
                #return $RETVAL
            fi
            printf "${Red}${service_name} is running with pid $pid ${Color_Off}\n"
            return 1
        else
            # 空文件可以删除pid文件
            rm -f $pid_file
            cd $work_dir && $exec
            RETVAL=$?
            if [ $RETVAL -ne 0 ]; then
                printf "${Red}start ${service_name} occurred errors ${Color_Off}\n"
            else
                printf "${Green}start ${service_name} successfully ${Color_Off}\n"
                sleep 1
                status
            fi
            return $RETVAL
        fi
    # pid文件不存在
    else
        cd $work_dir && $exec
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
            printf "${Red}start ${service_name} occurred errors ${Color_Off}\n"
        else
            printf "${Green}start ${service_name} successfully ${Color_Off}\n"
            sleep 1
            status
        fi
        return $RETVAL
    fi
}

stop() {
    if [ -f "$pid_file" ];then
        pid=`cat "$pid_file" 2>/dev/null`
        if [ -n "$pid" ];then
            kill $pid 2>/dev/null
            if [ $? -eq 0 ];then
                printf "${Green}shutdown ${service_name} successfully ${Color_Off}\n"
                rm -f $pid_file
                RETVAL=0
            else
                printf "${Red}${service_name} pid $pid is not correct, maybe process is still running ${Color_Off}\n"
                rm -f $pid_file
                RETVAL=1
            fi
            return $RETVAL
        else
            # 空文件可以删除pid文件
            rm -f $pid_file
            printf "${Red}can't find pid in /var/run/nss-cache.pid, ${service_name} is not running ${Color_Off}\n"
        fi
    else
        printf "${Red}${service_name} is not running ${Color_Off}\n"
    fi
    return 0
}

restart() {
    stop
    start
}


case "$1" in
    start)
    start
    ;;
    stop)
    stop
    ;;
    restart)
    restart
    ;;
    status)
    status
    ;;
    *)
    printf "${Red}Usage: service ${service_name} {start|stop|restart|status}${Color_Off}\n"
        RETVAL=1
    esac
    exit $RETVAL
